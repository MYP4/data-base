'1. Выбрать все данные о зонах парковки. Результат отсортировать по
названию парковки в лексикографическом порядке.'

SELECT * 
FROM parking_area
ORDER BY name;


'2. Выбрать все года въезда автомобилей на парковку без повторений.
Результат отсортировать в убывающем порядке.'

SELECT DISTINCT EXTRACT(YEAR FROM start_date_and_time) AS YEAR
FROM rent_place
ORDER BY YEAR DESC;


'3. Выбрать название, код, вместимость зон парковки. Результат
отсортировать по вместимости в убывающем порядке, по коду в
возрастающем порядке'

SELECT name, code, capacity
FROM parking_area
ORDER BY capacity DESC, code ASC;


'4. Выбрать все данные о въездах и выездах, совершенных вчера с 12 до 18
часов. Результат отсортировать по времени въезда в убывающем порядке.'

SELECT *
FROM rent_place
WHERE (EXTRACT(HOUR FROM start_date_and_time) >= 12
   AND EXTRACT(HOUR FROM start_date_and_time) <= 18)
   OR (EXTRACT(HOUR FROM end_date_and_time) >= 12
   AND EXTRACT(HOUR FROM end_date_and_time) <= 18)
ORDER BY end_date_and_time DESC;


'5. Выбрать названия типов транспортных средств, которые состоят из двух
или трех слов, но не включают "ов".'

SELECT name
FROM (SELECT trim(name) AS name FROM car_type) AS ct
WHERE 
	(length(name) - length(replace(name, ' ', '')) = 1
	OR length(name) - length(replace(name, ' ', '')) = 2)
	AND (name NOT LIKE '%ов%');
	

'6. Выбрать даты въезда и выезда автомобилей (без повторений) с id 5, 2, 12,
3,12, 13. Результат отсортировать следующим образом: в первую очередь
автомобили с зоны парковки с id = 2, затем с зоны парковки с id = 5, после
с зоны парковки с id = 3, затем все остальные, и по id транспортного
средства в возрастающем порядке.'

WITH SELECTed_data AS 
	(SELECT DISTINCT start_date_and_time, end_date_and_time, parking_area_id, car_id 
	FROM rent_place
	WHERE car_id IN (5, 2, 12, 3, 12, 13))

	
SELECT start_date_and_time, end_date_and_time, car_id
FROM SELECTed_data
ORDER BY
	CASE 
		WHEN parking_area_id = 2 THEN 1
		WHEN parking_area_id = 5 THEN 2
		WHEN parking_area_id = 3 THEN 3
		ELSE 4
	END, car_id ASC


'7. Выбрать зоны парковки, в названии которых нет символов /, _ , -, но есть
одна из следующих букв A, B, C.'

SELECT name
FROM parking_area
WHERE name NOT LIKE '%\_%' ESCAPE '\'
  AND name NOT LIKE '%/%'
  AND name NOT LIKE'%-%'
  AND (upper(name) LIKE '%А%' OR name LIKE '%В%' OR name LIKE '%С%');


'8. Выбрать все данные тарифов, в последнем столбце указать сообщение
"Прошлый год", если тариф вступил в силу в прошлом году, "Устарел", если
тариф вступил в силу в позапрошлом году и ранее. Для тарифов текущего
года в последнем столбце указать стоимость часа. Результат
отсортировать по убыванию стоимости часа.'

SELECT *,
CASE
    WHEN EXTRACT(YEAR FROM start_date) = EXTRACT(YEAR FROM current_date) THEN cast(cost_per_HOUR AS varchar(30))
    WHEN EXTRACT(YEAR FROM start_date) = EXTRACT(YEAR FROM current_date) - 1 THEN 'Прошлый год'
    ELSE 'Устарел'
END AS info
FROM rate
ORDER BY cost_per_HOUR DESC;


'9. Выбрать год и название месяца в одном столбце для выездов
транспортных средств с четным id.'

SELECT to_char(end_date_and_time, 'YYYY MONTH') AS info, car_id
FROM rent_place
WHERE car_id % 2 = 0;


'10.Выбрать типы транспортных средств, для которых не указано описание.
Результат отсортировать следующим образом: в первую очередь те типы
транспортных средств, названия которых состоят из одного слова, во
вторую очередь состоящие из двух слов, затем все остальные.'

SELECT name
FROM car_type
WHERE description IS NULL OR description = ''
ORDER BY 
	CASE 
	    WHEN LENGTH(name) - LENGTH(REPLACE(name, ' ', '')) = 0 THEN 1
	    WHEN LENGTH(name) - LENGTH(REPLACE(name, ' ', '')) = 1 THEN 2
		ELSE 3
	END, name
	

'11.Выбрать дату открытия парковки.'
	
select min(rp.start_date_and_time) as open_time 
from rent_place rp
group by rp.parking_area_id 
	

'12.Выбрать среднее время пребывания автомобилей на парковке.'

SELECT AVG(end_date_and_time - start_date_and_time) AS time
FROM rent_place


'13.Выбрать вместимость самой большой и самой маленькой зоны парковки.'

SELECT max(capacity), min(capacity)
FROM parking_area


'14.Выбрать количество различных транспортных средств, бывших на
парковке в текущем месяце.'

SELECT count(car_id) 
FROM rent_place
WHERE EXTRACT(YEAR FROM start_date_and_time) = EXTRACT(YEAR FROM current_date)
  AND EXTRACT(MONTH FROM start_date_and_time) = EXTRACT(MONTH FROM current_date)


'15.Выбрать суммарное время пребывания автомобиля с id = 2 на стоянке за
прошлый год.'

SELECT sum(end_date_and_time - start_date_and_time) AS time
FROM rent_place
WHERE car_id = 2
 
 
SELECT SUM(EXTRACT(EPOCH FROM (end_date_and_time - start_date_and_time))) / 3600 as time
FROM rent_place 
WHERE car_id = 2 
  AND start_date_and_time >= date_trunc('year', current_date) 


'16.Выбрать название типа и номер транспортного средства. Результат
отсортировать по названию типа в порядке обратном
лексикографическому и по номеру'

SELECT c.car_number, ct."name" 
FROM car c
LEFT JOIN car_model cm ON c.car_model_id = cm.car_model_id
LEFT JOIN car_type ct ON cm.car_type_id = ct.car_type_id
ORDER BY ct."name" DESC, c.car_number


'17.Выбрать номера транспортных средств, которые выезжали с парковки
вчера.'
SELECT c.car_number 
FROM rent_place rp 
LEFT JOIN car c ON c.car_id = rp.car_id
WHERE rp.end_date_and_time between 
	(current_date - interval '1 day')::timestamp
	AND 
	(current_date - interval '1 second')::timestamp


SELECT c.car_number as car
FROM rent_place rp 
left join car c on c.car_id = rp.car_id
WHERE start_date_and_time >= date_trunc('day', current_date) - interval '1 day' 
  AND start_date_and_time < date_trunc('day', current_date)	


'18.Выбрать номер транспортного средства, название типа транспортного
средства, дату въезда на парковку, время въезда на парковку, дату выезда,
время выезда, название и код зоны парковки, стоимость часа парковки.'
	
SELECT
	c.car_number,
	ct."name",
	to_char(rp.start_date_and_time, 'YYYY MONTH') AS start_date,
	to_char(rp.start_date_and_time, 'HH24:MI:SS') AS start_time,
	to_char(rp.end_date_and_time, 'YYYY MONTH') AS end_date,
	to_char(rp.end_date_and_time, 'HH24:MI:SS') AS end_time,
	pa."name",
	pa.capacity,
	r.cost_per_hour 
FROM car c
LEFT JOIN car_model cm ON c.car_model_id = cm.car_model_id
LEFT JOIN car_type ct ON cm.car_type_id = ct.car_type_id
LEFT JOIN rent_place rp ON c.car_id = rp.car_id
LEFT JOIN parking_area pa ON rp.parking_area_id = pa.parking_area_id
LEFT JOIN rate r ON rp.rate_id = r.rate_id


'19.Выбрать номера транспортных средств, которые оставались в зоне
парковки N (конкретное значение подставьте сами) на ночь.'

SELECT c.car_number, c.car_id 
FROM rent_place rp
LEFT JOIN car c ON c.car_id = rp.car_id 
WHERE rp.parking_area_id = 3
  AND EXTRACT(HOUR FROM rp.start_date_and_time) >= 21
  AND (EXTRACT(HOUR FROM rp.end_date_and_time) <= 6
  OR EXTRACT(HOUR FROM rp.end_date_and_time) > 6)

SELECT c.car_number, c.car_id 
FROM rent_place rp 
LEFT JOIN car c ON c.car_id = rp.car_id 
WHERE rp.parking_area_id = 3 
  AND rp.start_date_and_time <= date_trunc('day', current_date)
  AND rp.end_date_and_time >= date_trunc('day', current_date) + interval '1 day'


select c.car_number, c.car_id 
from rent_place rp
left join car c on c.car_id = rp.car_id 
where rp.parking_area_id = 3
  and start_date_and_time <= date_trunc('day', current_date)
  AND end_date_and_time >= date_trunc('day', current_date) + interval '1 day'
  
  
SELECT car_id
FROM rent_place
WHERE start_date_and_time <= date_trunc('day', current_date)
  AND end_date_and_time >= date_trunc('day', current_date) + interval '1 day'
  AND parking_zone = 'N'


'20.Выбрать название и код зоны парковки, количество парковавшихся
транспортных средств.'

SELECT 
	pa."name",
	pa.code,
	count(rp.car_id) AS parked_count
FROM parking_area pa 
LEFT JOIN rent_place rp ON pa.parking_area_id = rp.parking_area_id 
GROUP BY pa.code, pa."name", pa.parking_area_id 
ORDER BY pa.code 


'21.Выбрать все данные о зонах парковки и количество парковавшихся
автомобилей в каждой зоне в текущем году. В результат включить только
парковки вместимостью больше N (значение подставьте сами).'

SELECT pa.*, count(rp.car_id) 
FROM parking_area pa
left join rent_place rp on rp.parking_area_id = pa.parking_area_id 
WHERE EXTRACT(YEAR FROM rp.start_date_and_time) = EXTRACT(YEAR FROM current_date)
  AND pa.capacity > 10
GROUP BY pa.parking_area_id 


'22.Выбрать номер транспортного средства, которое въезжало на парковку
более трех раз.'

SELECT c.car_number
FROM car c
WHERE (SELECT count(rp.car_id) > 3 FROM rent_place rp);


'23.Выбрать номер транспортного средства, которое въезжало на парковку
несколько раз за один день.'

select c.car_number
from rent_place rp 
left join car c on rp.car_id = c.car_id
group by c.car_number, to_char(rp.start_date_and_time, 'YYYY-MONTH-DD')
having count(rp.start_date_and_time) > 1 


'24.Выбрать номер транспортного средства, которое въезжало на парковку
несколько раз за один день, но всегда в одну и ту же зону парковки.
Результат отсортировать по убыванию.'

select car_number, count(parking_area_id), dt, cnt
from (
	select c.car_number, to_char(rp.start_date_and_time, 'YYYY-MONTH-DD') as dt, rp.parking_area_id, count(*) as cnt
	from rent_place rp 
	left join car c on rp.car_id = c.car_id
	group by c.car_number, to_char(rp.start_date_and_time, 'YYYY-MONTH-DD'), rp.parking_area_id 
) data
group by 
	car_number, dt, cnt
--having count(to_char(rp.start_date_and_time, 'YYYY-MONTH-DD')) > 1 
--   and count(parking_area_id) = count(rp.start_date_and_time)
order by car_number desc 


'25.Выбрать все данные типа, транспортные средства которого въезжали на
парковку в текущем месяце более трех раз. '

SELECT ct.*
FROM car_type ct 
LEFT JOIN car_model cm ON cm.car_type_id = ct.car_type_id 
LEFT JOIN car c ON c.car_model_id = cm.car_model_id 
LEFT JOIN rent_place rp ON c.car_id = rp.car_id
WHERE (SELECT count(rp.car_id) > 3 FROM rent_place rp)
  AND EXTRACT(MONTH FROM rp.start_date_and_time) = EXTRACT(MONTH FROM current_date)

  
'26.Выбрать зону парковки вместимостью больше N и дату(ы) текущего
месяца, когда в зоне парковки побывало ТС в два раза больше, чем
вместимость парковочной зоны. Результат отсортировать по дате.'
  

  
  
'27.Выбрать все типы транспортных средств, и если есть тариф на
соответствующий тип, то выбрать стоимость и дату вступления в силу.'
  
  
'28.Выбрать все номера транспортных средств, и если транспортное средство
парковалось в текущем месяце, то дату и время въезда и выезда.'

  
'29.Выбрать пары названий типов транспортных средств, которые имеют
одинаковые тарифы.'
  
  
'30.Выбрать для каждой зоны парковки все виды транспортных средств.
Результат отсортировать по названию вида и коду зоны парковки'

